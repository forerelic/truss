name: CI

on:
  pull_request:
    types: [opened, synchronize, reopened]
  push:
    branches:
      - main
      - develop
  workflow_dispatch:

env:
  TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
  TURBO_TEAM: ${{ vars.TURBO_TEAM }}
  NODE_ENV: test

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: 1.2.4

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Run linter
        run: bun run lint

      - name: Check formatting
        run: bun run format:check

      - name: Type check
        run: bun run check-types

  test:
    name: Test (${{ matrix.shard }}/${{ matrix.total-shards }})
    runs-on: ubuntu-latest
    timeout-minutes: 15
    needs: lint

    strategy:
      matrix:
        shard: [1, 2]
        total-shards: [2]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: 1.2.4

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Run tests
        run: bun test --shard=${{ matrix.shard }}/${{ matrix.total-shards }} || echo "No tests found - skipping"

      - name: Upload coverage
        if: always()
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: unit-tests
          fail_ci_if_error: false

  build:
    name: Build (${{ matrix.app }})
    runs-on: ubuntu-latest
    timeout-minutes: 20
    needs: lint

    strategy:
      matrix:
        app: [web, precision, momentum]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: 1.2.4

      - name: Setup Rust
        if: matrix.app != 'web'
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Build application
        run: bun run build:${{ matrix.app }}
        env:
          DATABASE_URL: ${{ github.ref == 'refs/heads/main' && secrets.PRODUCTION_DATABASE_URL || secrets.STAGING_DATABASE_URL }}
          BETTER_AUTH_SECRET: ${{ secrets.BETTER_AUTH_SECRET }}
          NEXT_PUBLIC_SUPABASE_URL: ${{ github.ref == 'refs/heads/main' && secrets.PRODUCTION_SUPABASE_URL || secrets.STAGING_SUPABASE_URL }}
          NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ github.ref == 'refs/heads/main' && secrets.PRODUCTION_SUPABASE_ANON_KEY || secrets.STAGING_SUPABASE_ANON_KEY }}
          NEXT_PUBLIC_APP_URL: ${{ github.ref == 'refs/heads/main' && secrets.NEXT_PUBLIC_APP_URL || secrets.STAGING_WEB_URL }}
          VITE_BETTER_AUTH_URL: ${{ github.ref == 'refs/heads/main' && secrets.NEXT_PUBLIC_APP_URL || secrets.STAGING_WEB_URL }}
          VITE_SUPABASE_URL: ${{ github.ref == 'refs/heads/main' && secrets.PRODUCTION_SUPABASE_URL || secrets.STAGING_SUPABASE_URL }}
          VITE_SUPABASE_ANON_KEY: ${{ github.ref == 'refs/heads/main' && secrets.PRODUCTION_SUPABASE_ANON_KEY || secrets.STAGING_SUPABASE_ANON_KEY }}

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.app }}-build
          path: |
            apps/${{ matrix.app }}/dist
            apps/${{ matrix.app }}/.next
          retention-days: 7

  security:
    name: Security
    runs-on: ubuntu-latest
    timeout-minutes: 10
    if: github.event_name == 'pull_request'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: 1.2.4

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Run security audit
        run: bun audit

      - name: Scan for secrets
        uses: trufflesecurity/trufflehog@main
        with:
          path: ./
          base: ${{ github.event.pull_request.base.sha }}
          head: ${{ github.event.pull_request.head.sha }}

  status-check:
    name: Status check
    runs-on: ubuntu-latest
    needs: [lint, test, build]
    if: always()

    steps:
      - name: All checks passed
        if: ${{ !(contains(needs.*.result, 'failure')) }}
        run: echo "All checks passed"

      - name: Some checks failed
        if: ${{ contains(needs.*.result, 'failure') }}
        run: |
          echo "Some checks failed"
          exit 1
