name: Validate Migrations

on:
  pull_request:
    paths:
      - "supabase/**"
      - "packages/database/src/types.ts"
      - ".github/workflows/validate-migrations.yml"

env:
  SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
  TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
  TURBO_TEAM: ${{ vars.TURBO_TEAM }}

concurrency:
  group: validate-migrations-${{ github.ref }}
  cancel-in-progress: true

jobs:
  validate:
    name: Validate migrations and types
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Supabase CLI
        uses: supabase/setup-cli@v1
        with:
          version: latest

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Validate SQL syntax
        run: bun run db:validate

      - name: Start local Supabase
        run: |
          supabase start
          supabase db reset --local

      - name: Test migrations locally
        run: |
          supabase db push --local
          supabase test db

      - name: Check for type drift
        run: bun run db:types:check

      - name: Add migration diff to PR
        uses: actions/github-script@v8
        with:
          script: |
            const fs = require('fs');
            const { execSync } = require('child_process');

            try {
              // Get migration diff
              const diff = execSync('supabase db diff --local', { encoding: 'utf-8' });

              // Post comment if there are uncommitted changes
              if (diff.trim()) {
                const comment = [
                  '## ⚠️ Uncommitted Schema Changes Detected',
                  '',
                  'The following schema changes are in your database but not in migration files:',
                  '',
                  '```sql',
                  diff,
                  '```',
                  '',
                  '**Action required:** Create a migration file for these changes using:',
                  '```bash',
                  'bun run db:migration:create <migration_name>',
                  '```'
                ].join('\n');

                await github.rest.issues.createComment({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: context.issue.number,
                  body: comment
                });

                core.setFailed('Uncommitted schema changes detected');
              } else {
                console.log('✅ All schema changes are captured in migration files');
              }
            } catch (error) {
              console.log('✅ No schema drift detected');
            }

      - name: Success summary
        run: |
          echo "### ✅ Migration Validation Passed" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- SQL syntax validated" >> $GITHUB_STEP_SUMMARY
          echo "- Migrations tested locally" >> $GITHUB_STEP_SUMMARY
          echo "- TypeScript types verified" >> $GITHUB_STEP_SUMMARY
          echo "- No schema drift detected" >> $GITHUB_STEP_SUMMARY
